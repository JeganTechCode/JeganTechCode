Node js Book App documentation

Documentation:
Port "http://localhost:3000" 

1) To create or add books to your MongoDB, you can use the following API endpoint:
	Method: POST
	URL: http://localhost:3000/api/books/CreateOrBooksDetails
	Example: http://localhost:3000/api/books/CreateOrBooksDetails

	Body raw (json)
	{
	    "title": "The Books",
	    "author": "Jegan",
	    "summary": "My Books"
	}
	
	Response (Json)
	
	{
	    "message": "Book created successfully",
		    "Data": {
				"title": "The Books",
				"author": "Jegan",
				"summary": "My Books",
				"_id": "654cd3ef43e8db4f467d9009",
				"createdAt": "2023-11-09T12:43:27.756Z",
				"updatedAt": "2023-11-09T12:43:27.756Z",
				"__v": 0
		    	}
	}

2) To list the books that have been added to your MongoDB, you can use the following API endpoint:
	Method: GET
	URL: http://localhost:3000/api/books/ListOfBooks
	Example: http://localhost:3000/api/books/ListOfBooks
	
	Body raw (json) 
	leave it empty
	
	Response (Json)
	
	{
	    "message": "List Of Books",
	    "Data": [
		{
		    "_id": "654cafe943e8db4f467d8ffe",
		    "title": "The Books",
		    "author": "Jegan",
		    "summary": "My Books",
		    "createdAt": "2023-11-09T10:09:45.376Z",
		    "updatedAt": "2023-11-09T10:09:45.376Z",
		    "__v": 0
		},
		{
		    "_id": "654cb4c543e8db4f467d9000",
		    "title": "The Books",
		    "author": "Jegan",
		    "summary": "My Books",
		    "createdAt": "2023-11-09T10:30:29.446Z",
		    "updatedAt": "2023-11-09T10:30:29.446Z",
		    "__v": 0
		},
		{
		    "_id": "654cd3ef43e8db4f467d9009",
		    "title": "The Books",
		    "author": "Jegan",
		    "summary": "My Books",
		    "createdAt": "2023-11-09T12:43:27.756Z",
		    "updatedAt": "2023-11-09T12:43:27.756Z",
		    "__v": 0
		}
	    ]
	}
	
3) To get specific book details by ID, you can use the following API endpoint. Replace :id with the actual ID of the book you want to retrieve:
	Method: GET
	URL: http://localhost:3000/api/books/specificBooks/:id
	Example: http://localhost:3000/api/books/specificBooks/654cafe943e8db4f467d8ffe
	
	Body raw (json) 
	Pass MongoDB collection _id
	
	Response (Json)
	
	{
	    "_id": "654cafe943e8db4f467d8ffe",
	    "title": "The Books",
	    "author": "Jegan",
	    "summary": "My Books",
	    "createdAt": "2023-11-09T10:09:45.376Z",
	    "updatedAt": "2023-11-09T10:09:45.376Z",
	    "__v": 0
	}

4) To update specific book details by ID, you can use the following API endpoint. Replace :id with the actual ID of the book you want to update:
	Method: PUT
	URL: http://localhost:3000/api/books/UpdateSpecificBooks/:id
	Example: http://localhost:3000/api/books/UpdateSpecificBooks/654b880896c9642fee748696
	
	Body raw (json) 
	Pass MongoDB collection _id
	
	{
	    "title": "The Books Of King",
	    "author": "Jegan Raj",
	    "summary": "Put your goal on the calendar."
	}
		
	Before Update Response (Json)
	
	{
	    "_id": "654cafe943e8db4f467d8ffe",
	    "title": "The Books",
	    "author": "Jegan",
	    "summary": "My Books",
	    "createdAt": "2023-11-09T10:09:45.376Z",
	    "updatedAt": "2023-11-09T10:09:45.376Z",
	    "__v": 0
	}
	
	After Update Response (Json)
	
	{
	    "Message": "Book Details Updated",
	    "Data": {
		"_id": "654cafe943e8db4f467d8ffe",
		"title": "The Books Of King",
		"author": "Jegan Raj",
		"summary": "Put your goal on the calendar.",
		"createdAt": "2023-11-09T10:09:45.376Z",
		"updatedAt": "2023-11-09T12:48:48.833Z",
		"__v": 0
	    }
	}
	
		
5) To delete specific book details by ID, you can use the following API endpoint. Replace :id with the actual ID of the book you want to delete:
	Method: DELETE
	URL: http://localhost:3000/api/books/DeleteSpecificBooks/:id
	Example: http://localhost:3000/api/books/DeleteSpecificBooks/654b880896c9642fee748696

	Body raw (json) 
	Pass MongoDB collection _id
	
	Response (Json)
	
	{
	    "message": "Book deleted successfully",
	    "Data": {
		"_id": "654cafe943e8db4f467d8ffe",
		"title": "The Books Of King",
		"author": "Jegan Raj",
		"summary": "Put your goal on the calendar.",
		"createdAt": "2023-11-09T10:09:45.376Z",
		"updatedAt": "2023-11-09T12:48:48.833Z",
		"__v": 0
	    }
	}

6) To use these APIs, you should make HTTP requests to the specified URLs using a tool like curl, Postman, or your web application. You will also need to have your Node.js server running by executing the npm start or npm run start command.


	API Documentation: https://documenter.getpostman.com/view/20598132/2s9YXiZMFk	
